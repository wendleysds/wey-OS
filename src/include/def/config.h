#ifndef _GLOBAL_CONFIG_H
#define _GLOBAL_CONFIG_H

#define KERNEL_CODE_SELECTOR 0x08
#define KERNEL_DATA_SELECTOR 0x10

#define USER_CODE_SEGMENT 0x1b
#define USER_DATA_SEGMENT 0x23

extern unsigned long __kernel_phys_start;
extern unsigned long __kernel_high_start;

#define KERNEL_PHYS_BASE ((unsigned long)&__kernel_phys_start)
#define KERNEL_VIRT_BASE ((unsigned long)&__kernel_high_start)

#define TOTAL_GDT_SEGMENTS 6
#define TOTAL_INTERRUPTS 256
#define TIMER_FREQUENCY 20

/* Memory */

/* Memory Layout

	-------
	|     | heap bitmap(meta data) <- HEAP_PHYS
	|     | heap start <- HEAP_PHYS + bitmap size = (HEAP_SIZE_BYTES / HEAP_BLOCK_SIZE)
	|     | heap end <- heap star + HEAP_SIZE_BYTES
	-------
*/

#define KiB(x) (x * 1024u)
#define MiB(x) (x * KiB(1024u))

#define _TEMP_PAGE_DIRECTORY_ADDRESS 0x02000000

#define HEAP_SIZE_BYTES MiB(40)
#define HEAP_BLOCK_SIZE 4096

#define ALIGN(value, alignment) (((value) + (alignment) - 1) & ~((alignment) - 1))

#define HEAP_PHYS 0x01000000
#define HEAP_VIRT 0xC2000000

#define HEAP_TABLE_PHYS_BASE (HEAP_PHYS)
#define HEAP_TABLE_PHYS_END  (HEAP_TABLE_PHYS_BASE + (HEAP_SIZE_BYTES / HEAP_BLOCK_SIZE))

#define HEAP_TABLE_VIRT_BASE (HEAP_VIRT)
#define HEAP_TABLE_VIRT_END (HEAP_TABLE_VIRT_BASE + (HEAP_SIZE_BYTES / HEAP_BLOCK_SIZE))

#define HEAP_PHYS_BASE (ALIGN(HEAP_TABLE_PHYS_END, HEAP_BLOCK_SIZE))
#define HEAP_PHYS_END  (HEAP_PHYS_BASE + HEAP_SIZE_BYTES)

#define HEAP_VIRT_BASE (ALIGN(HEAP_TABLE_VIRT_END, HEAP_BLOCK_SIZE))
#define HEAP_VIRT_END  (HEAP_VIRT_BASE + HEAP_SIZE_BYTES)

#define KERNEL_STACK_SIZE KiB(512)
#define KERNEL_STACK_PHYS_TOP 0x00200000
#define KERNEL_STACK_PHYS_BOTTOM (KERNEL_STACK_PHYS_TOP - KERNEL_STACK_SIZE)

#define KERNEL_STACK_VIRT_TOP 0xC1000000
#define KERNEL_STACK_VIRT_BOTTOM (KERNEL_STACK_VIRT_TOP - KERNEL_STACK_SIZE)

/* I/O */
#define KERNEL_FB_VIRT_BASE 0xD0000000

/*Files and File System*/
#define PATH_MAX 128
#define FILE_DESCRIPTORS_MAX 64
#define FILESYSTEMS_MAX 8

/*Devices*/
#define DEVICES_MAX 16
#define MAJOR_MAX 6
#define MINOR_MAX 8

/*Processes*/
#define PROC_MAX 32
#define PROC_NAME_MAX 32
#define PROC_ARG_MAX 32
#define PROC_FD_MAX 16

// Process Stack
#define PROC_USER_STACK_VIRUTAL_TOP 0x3FF000
#define PROC_USER_STACK_SIZE 8192
#define PROC_USER_STACK_VIRUTAL_BUTTOM (PROC_USER_STACK_VIRUTAL_TOP - PROC_USER_STACK_SIZE)

#define PROC_KERNEL_STACK_VIRTUAL_TOP 0xC1100000
#define PROC_KERNEL_STACK_SIZE 4096
#define PROC_KERNEL_STACK_VIRTUAL_BUTTOM (PROC_KERNEL_STACK_VIRTUAL_TOP - PROC_KERNEL_STACK_SIZE)

#define PROC_VIRTUAL_ADDRESS 0x400000

#endif
